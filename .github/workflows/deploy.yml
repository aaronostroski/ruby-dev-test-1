name: Deploy to EKS

on:
  push:
    branches:
      - main
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

env:
  AWS_REGION: sa-east-1
  ECR_REPOSITORY: ecr-click-test/ruby-dev-test-1
  CLUSTER_NAME: click-testt
  NAMESPACE: ns-ruby-dev-test-1
  CHART_DIR: ./charts

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          IMAGE_TAG=latest
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

      - name: Deploy Helm chart
        run: |
          helm upgrade --install ruby-dev-test-1 $CHART_DIR \
            --namespace $NAMESPACE \
            --create-namespace \
            --set image.repository=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }} \
            --set image.tag=latest
          
          echo kubectl get pods -n $NAMESPACE
          
      - name: Run Rails DB Migrate
        run: |
          kubectl rollout status deployment/ruby-dev-test-1 -n $NAMESPACE

          POD_NAME=$(kubectl get pods -n $NAMESPACE -l app=ruby-dev-test-1 -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -n $NAMESPACE $POD_NAME -- bundle exec rails db:migrate